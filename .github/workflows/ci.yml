name: ci

on:
  push: {}
  release:
    types:
      - published

jobs:
  fern-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install Fern
        run:  npm install -g fern-api

      - name: Check Fern API is valid
        run: fern check
  
  fern-generate-python:
    needs: fern-check
    if: github.event_name == 'release' && startsWith(github.event.release.tag_name, 'python@')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3

      - name: Download Fern
        run: npm install -g fern-api

      - name: Generate Python SDK
        env:
          FERN_TOKEN: ${{ secrets.FERN_TOKEN }}
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: | 
          tag=${{ github.event.release.tag_name }}
          prefix="python@"
          SDK_VERSION="${tag#$prefix}"
          fern generate --api api --group python-sdk --log-level debug --version "$SDK_VERSION"
  
  fern-generate-ts:
    needs: fern-check
    if: github.event_name == 'release' && startsWith(github.event.release.tag_name, 'node@')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3

      - name: Download Fern
        run: npm install -g fern-api

      - name: Generate Node SDK
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          FERN_TOKEN: ${{ secrets.FERN_TOKEN }}
        run: | 
          tag=${{ github.event.release.tag_name }}
          prefix="node@"
          SDK_VERSION="${tag#$prefix}"
          fern generate --api api --group ts-sdk --log-level debug --version "$SDK_VERSION"
